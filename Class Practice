class Team(object):
    def __init__(self, name, wins, losses, playerList=[]): #made playerList default to empty list
        self.name = name
        self.wins = wins
        self.losses = losses
        self.playerList = playerList
    
    def __repr__(self):
        return str(self.name)
    
    def isValidTeam(self):
        playerAmount = len(self.playerList)
        return (9 <= playerAmount) and (playerAmount <= 25)
    
    def displayStats(self):
        return "The %s have won %s games and lost %s games." %(self.name, self.wins, self.losses)
        
    def roster(self):
        return "The %s have %s on their roster." %(self.name, self.playerList)
        
    def addPlayer(self, player): #added addPlayer function
        self.playerList.append(player)
        
    def addPlayerList(self, players):
        for i in players:
            self.playerList.append(i)

class Player(object):
    def __init__(self, name, homerCount, position, onBasePercentage):
        self.name = name
        self.homerCount = homerCount
        self.position = position
        self.onBasePercentage = onBasePercentage
    
    def __repr__(self):
        return str(self.name)
    
    def displayStats(self):
        return "%s plays %s, with a %s OBP. He's hit %s home runs." %(self.name, self.position, self.onBasePercentage, self.homerCount)

def moreHomers(team1, team2):
    team1Total = 0
    for i in team1.playerList:
        team1Total += i.homerCount
    team2Total = 0
    for i in team2.playerList:
        team2Total += i.homerCount
    if team1Total > team2Total:
        return "The %s have hit more home runs!" %(team1)
    elif team2Total > team1Total:
        return "The %s have hit more home runs!" %(team2)
    else:
        return "They've hit the same amount of home runs!"
